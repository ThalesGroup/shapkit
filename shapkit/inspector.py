# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/inspector.ipynb (unless otherwise specified).

__all__ = ['inspector']

# Cell
import numpy as np

# Cell
def inspector(x_min, precision=0, verbose=False):
    """A closure called to update metrics after each iteration."""
    bool = (x_min.abs() >= precision).values
    # print(bool, (x_min >= precision), x_min[bool])
    errors = []
    it = [0] # This is a hack to be able to modify 'it' inside the closure
    def inspector_cl(xk):
        err = np.linalg.norm(xk[bool] - x_min[bool], 2)
        errors.append(err)
        if verbose == True:
            if it[0] == 0:
                print(' | '.join([name.center(8) for name in ["it", "err"]]))
            if it[0] % 10 == 0:
                print(' | '.join([("%d" % it[0]).rjust(8), ("%.2e" % err).rjust(8)]))
            it[0] += 1
    inspector_cl.err = errors
    return inspector_cl